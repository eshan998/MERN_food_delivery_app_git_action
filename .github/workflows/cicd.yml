name: CICD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
jobs:
  CodeScan:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  #  Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: install trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy
          #scanning files
          trivy fs .
  build_and_push_docker_image:
    needs: CodeScan
    if: >
          github.event_name == 'pull_request' && 
          github.event.action == 'closed' && 
          github.event.pull_request.merged == true ||
          github.event_name == 'push' &&
          github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v4
    - name: login to dockerhub
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_TOKEN}}
    - name: create frontend env file with all the secrets
      run: |
        cd mern-food-ordering-app-frontend
        touch .env
        echo VITE_API_BASE_URL=${{secrets.VITE_API_BASE_URL}} >> .env
        echo VITE_AUTH0_DOMAIN=${{secrets.VITE_AUTH0_DOMAIN}} >> .env
        echo VITE_AUTH0_CLIENT_ID=${{secrets.VITE_AUTH0_CLIENT_ID}} >> .env
        echo VITE_AUTH0_CALLBACK_URL=${{secrets.VITE_AUTH0_CALLBACK_URL}} >> .env
        echo VITE_AUTH0_AUDIENCE=${{secrets.VITE_AUTH0_AUDIENCE}} >> .env
        cat .env
        pwd
        ls -a
    - name: build and push frontend docker image
      working-directory: mern-food-ordering-app-frontend
      run: |
        docker build --file Dockerfile -t eshan3312/mern-food-delivery-frontend-action .
        docker push eshan3312/mern-food-delivery-frontend-action:latest
        cd ..
    - name: create backend env file with all the secrets
      run: |
        cd mern-food-ordering-app-backend
        touch .env
        echo MONGODB_CONNECTION_STRING=${{secrets.MONGODB_CONNECTION_STRING}} >> .env
        echo AUTH0_AUDIENCE=${{secrets.AUTH0_AUDIENCE}} >> .env
        echo AUTH0_ISSUER_BASE_URL=${{secrets.AUTH0_ISSUER_BASE_URL}} >> .env 
        echo CLOUDINARY_CLOUD_NAME=${{secrets.CLOUDINARY_CLOUD_NAME}} >> .env
        echo CLOUDINARY_API_KEY=${{secrets.CLOUDINARY_API_KEY}} >> .env
        echo CLOUDINARY_API_SECRET=${{secrets.CLOUDINARY_API_SECRET}} >> .env
        echo FRONTEND_URL=${{secrets.FRONTEND_URL}} >> .env
        echo STRIPE_API_KEY=${{secrets.STRIPE_API_KEY}} >> .env
        echo STRIPE_WEBHOOK_SECRET=${{secrets.STRIPE_WEBHOOK_SECRET}} >> .env
        cat .env
        pwd
        ls -a
    - name: build and push backend image to dockerhub
      working-directory: mern-food-ordering-app-backend
      run: |
        docker build --file Dockerfile -t eshan3312/mern-food-delivery-backend-action .
        docker push eshan3312/mern-food-delivery-backend-action:latest
        cd ..
  deploy_to_aws:
    needs: build_and_push_docker_image
    runs-on: [aws]
    steps:
    - name: remove old images and create new deployment
      run: |
        git clone https://github.com/eshan998/MERN_food_delivery_app_git_action.git
        cd MERN_food_delivery_app_git_action
        docker compose down -v
        docker rmi --force eshan3312/mern-food-delivery-frontend-action:latest || true
        docker rmi --force eshan3312/mern-food-delivery-backend-action:latest || true
    - name: clone git repo and pull latest images
      run: |
        docker image pull eshan3312/mern-food-delivery-frontend-action:latest
        docker image pull eshan3312/mern-food-delivery-backend-action:latest
    - name: scan image with trivy
      run: |
        trivy image eshan3312/mern-food-delivery-frontend-action:latest
        trivy image eshan3312/mern-food-delivery-backend-action:latest
    - name: create new deployment
      run: |
        docker-compose up -d --force-recreate
        docker ps

