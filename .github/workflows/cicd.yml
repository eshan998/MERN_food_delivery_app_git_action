name: Build and Deploy to aws
on:
  push:
    branches:
      - main
#   pull_request:
#     types: [opened, synchronize, reopened]   
jobs:
  build:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     python-version: ["3"]
    steps:
    - name: Checkout source
      uses: actions/checkout@v4
    - name: login to dockerhub
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_TOKEN}}
    - name: create frontend env file with all the secrets
      run: |
        cd mern-food-ordering-app-frontend
        touch .env
        echo VITE_API_BASE_URL=${{secrets.VITE_API_BASE_URL}} >> .env
        echo VITE_AUTH0_DOMAIN=${{secrets.VITE_AUTH0_DOMAIN}} >> .env
        echo VITE_AUTH0_CLIENT_ID=${{secrets.VITE_AUTH0_CLIENT_ID}} >> .env
        echo VITE_AUTH0_CALLBACK_URL=${{secrets.VITE_AUTH0_CALLBACK_URL}} >> .env
        echo VITE_AUTH0_AUDIENCE=${{secrets.VITE_AUTH0_AUDIENCE}} >> .env
        cat .env
        pwd
    # - name: Build and push plugin
    #   uses: docker/build-push-action@v4
    #   with:
    #     context: .
    - name: build and push frontend docker image
      working-directory: mern-food-ordering-app-frontend
      run: |
        docker build -t eshan3312/mern-food-delivery-frontend-action .
        docker push eshan3312/mern-food-delivery-frontend-action:latest
        cd ..
    - name: create backend env file with all the secrets
      run: |
        cd mern-food-ordering-app-backend
        touch .env
        echo MONGODB_CONNECTION_STRING=${{secrets.MONGODB_CONNECTION_STRING}} >> .env
        echo AUTH0_AUDIENCE=${{secrets.AUTH0_AUDIENCE}} >> .env
        echo AUTH0_ISSUER_BASE_URL=${{secrets.AUTH0_ISSUER_BASE_URL}} >> .env 
        echo CLOUDINARY_CLOUD_NAME=${{secrets.CLOUDINARY_CLOUD_NAME}} >> .env
        echo CLOUDINARY_API_KEY=${{secrets.CLOUDINARY_API_KEY}} >> .env
        echo CLOUDINARY_API_SECRET=${{secrets.CLOUDINARY_API_SECRET}} >> .env
        echo FRONTEND_URL=${{secrets.FRONTEND_URL}} >> .env
        echo STRIPE_API_KEY=${{secrets.STRIPE_API_KEY}} >> .env
        echo STRIPE_WEBHOOK_SECRET=${{secrets.STRIPE_WEBHOOK_SECRET}} >> .env
        cat .env
        pwd
    - name: build and push backend image to dockerhub
      run: |
        docker build -t eshan3312/mern-food-delivery-backend-action .
        docker push eshan3312/mern-food-delivery-backend-action:latest
        cd ..
  # deploy:
  #   needs: build
  #   runs-on: [aws-ec2]
  #   steps:
  #     - name: pull frontend image from docker hub
  #       run: docker pull eshan998/food_delivery_frontend
  #     - name: pull backend image from docker hub
  #       run: docker pull eshan998/food_delivery_backend

